/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package stack.and.queue;

public class App {
    public String getGreeting() {
        return "Hello World!";
    }

    public static void main(String[] args) {

//        Stack<Integer> newS = new Stack<>();
//        newS.push(4);
//        System.out.println(newS.top.value);
//        newS.pop();
//        System.out.println(newS.isEmpty());
//
//
//
//        Queue<Integer> newQ = new Queue<>();
//        newQ.enqueue(6);
//        System.out.println(newQ.dequeue());
//
//        PseudoQueue<Integer> test = new PseudoQueue<>();
//        test.enqueue(5);
//        test.enqueue(9);
//        test.enqueue(10);


//        System.out.println(test.enqueue(4).toString());

//        System.out.println(test.instance1.toString());
//
//        System.out.println(test.dequeue());
//        System.out.println(test.dequeue());
//        System.out.println(test.dequeue());
//        System.out.println(test.dequeue());

//        System.out.println(test.instance1.toString());


//        AnimalShelter test = new AnimalShelter();
//        Animal animal = new Cat();
//        test.enqueue(animal);
//        System.out.println(test.dequeue("cat"));
//        System.out.println(test.dequeue("cat"));

        String test = "{}{Code}[Fellows](())";

        System.out.println(validateBrackets(test));

    }

    public static boolean validateBrackets(String code){
        Stack<Character> codeStack = new Stack<>();
        for (int i = 0; i < code.length(); i++) {
            if (code.charAt(i) == '{' || code.charAt(i) == '(' || code.charAt(i) == '['){
                codeStack.push(code.charAt(i));

            }else if (code.charAt(i) == '}' && !codeStack.isEmpty() && codeStack.peek() =='{'){
                    codeStack.pop();
            }else if( code.charAt(i) == ')' && !codeStack.isEmpty() && codeStack.peek() =='('){
                codeStack.pop();
            }else if (code.charAt(i) == ']' && !codeStack.isEmpty() && codeStack.peek() =='['){
                codeStack.pop();
            }
            }
        return codeStack.isEmpty();
    }
}
