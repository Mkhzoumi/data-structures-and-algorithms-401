/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package hashtable;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class AppTest {
    @Test void appHasAGreeting() {
        App classUnderTest = new App();
        assertNotNull(classUnderTest.getGreeting(), "app should have a greeting");



//        Adding a key/value to your hashtable results in the value being in the data structure
        HashTable testingTable = new HashTable<>(10);

        testingTable.add("test","test adding");
        assertEquals(true ,testingTable.contains("test"));




//        Retrieving based on a key returns the value stored
        assertEquals("test adding",testingTable.get("test"));



//        Successfully returns null for a key that does not exist in the hashtable
        assertEquals("this key is not existed",testingTable.get("hello"));


//        Successfully handle a collision within the hashtable
        testingTable.add("a","this is the first");
        testingTable.add(97,"this is the second");

        assertEquals("this is the first",testingTable.arrayOfNodes[7].value);
        assertEquals("this is the second",testingTable.arrayOfNodes[7].next.value);


//        Successfully retrieve a value from a bucket within the hashtable that has a collision
        assertEquals("this is the first",testingTable.get("a"));



//        Successfully hash a key to an in-range value
        assertEquals(9,testingTable.hash("hi"));

    }


}
